{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","components/GifExpertApp.js","index.js"],"names":["AddCategory","setCategory","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","arr","type","value","onChange","target","GifGridItem","title","url","className","src","alt","getGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","img","id","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","console","log","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAmB,IAAlBC,EAAiB,EAAjBA,YAEzB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAgBA,OACI,sBAAMC,SAVW,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAa,SAACS,GAAD,OAAUP,GAAV,mBAAyBO,OACtCN,EAAc,MAKlB,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SAnBc,SAACP,GAEvBF,EAAeE,EAAEQ,OAAOF,a,QCPnBG,EAAc,SAAC,GAAkB,IAAjBC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,IAEhC,OACI,sBAAKC,UAAU,yCAAf,UACI,qBAAKC,IAAKF,EAAKG,IAAKJ,IACpB,4BAAIA,Q,uBCPHK,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbN,EAFa,iDAEmCO,UAAUF,GAF7C,+DAIAG,MAAMR,GAJN,cAIbS,EAJa,gBAKIA,EAAKC,OALT,uBAKXC,EALW,EAKXA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRhB,MAAOe,EAAIf,MACXC,IAAG,UAAEc,EAAIE,cAAN,aAAE,EAAYC,iBAAiBjB,QAXvB,kBAeZY,GAfY,4CAAH,sDCKPM,EAAU,SAAC,GAAkB,IAAhBb,EAAe,EAAfA,SAEtB,ECJwB,SAACA,GAEzB,MAA0BpB,mBAAS,CAC/B0B,KAAM,GACNQ,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAeA,OAVAC,qBAAW,WACPlB,EAAQC,GACHkB,MAAM,SAAAC,GACHH,EAAS,CACLV,KAAMa,EACNL,SAAS,SAGtB,CAACd,IAEGe,EDbwBK,CAAapB,GAAhCW,EAAZ,EAAOL,KAAaQ,EAApB,EAAoBA,QAGpB,OAFAO,QAAQC,IAAIR,GAGR,qCACI,qBAAIlB,UAAU,oCAAd,cAAoDI,EAApD,OAEEc,GAAW,wCAEb,qBAAKlB,UAAU,YAAf,SAEQe,EAAOH,KAAI,SAACC,GAAD,OACP,cAAC,EAAD,eAEQA,GADCA,EAAIC,aEhBxBa,EAAe,WAExB,MAAkC3C,mBAAS,CAAC,aAA5C,mBAAO4C,EAAP,KAAmB7C,EAAnB,KAEA,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,YAAaA,IAC1B,uBACA,6BAEQ6C,EAAWhB,KAAK,SAAAR,GAAQ,OACpB,cAAC,EAAD,CAEIA,SAAUA,GADLA,Y,MCVjCyB,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.f13262db.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\nimport Proptypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategory}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        /* console.log(e); */\r\n        setInputValue (e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (inputValue.trim().length > 2) {\r\n            setCategory ((arr) => [inputValue, ...arr]);\r\n            setInputValue('');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={ handleSubmit }>\r\n            <input \r\n                type='text'\r\n                value={inputValue}\r\n                onChange={ handleInputChange }\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategory: Proptypes.func.isRequired\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({title, url}) => {\r\n    \r\n    return (\r\n        <div className=\"card animate__animated animate__bounce\">\r\n            <img src={url} alt={title}/>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","export const getGifs = async (category) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=FTFI1xP1fTc5FX2ndwAj6wNRcIalRJk6`\r\n\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    return gifs;\r\n\r\n}","import React from 'react'\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n    const {data:images, loading} = useFetchGifs(category);\r\n    console.log(loading);\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__fadeIn\"> {category} </h3>\r\n\r\n            { loading && <p>Loading</p>}\r\n\r\n            <div className='card-grid'>\r\n                {\r\n                    images.map((img) =>\r\n                        <GifGridItem\r\n                            key={img.id}\r\n                            {...img} \r\n                        />\r\n                    )\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = (category) => {\r\n    \r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect( () => {\r\n        getGifs(category)\r\n            .then( imgs => {\r\n                setState({\r\n                    data: imgs,\r\n                    loading: false\r\n                })\r\n            });\r\n    }, [category])\r\n\r\n    return state; // { data: [], loading: true};\r\n}\r\n\r\n","import React, {useState} from 'react'\r\nimport { AddCategory } from './AddCategory'\r\nimport { GifGrid } from './GifGrid'\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    const [categories, setCategory] = useState(['Maradona'])\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategory={setCategory}/>\r\n            <hr />\r\n            <ol>\r\n                {\r\n                    categories.map (category => \r\n                        <GifGrid \r\n                            key={category}\r\n                            category={category}\r\n                        />\r\n                    )\r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { GifExpertApp } from './components/GifExpertApp';\n\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);"],"sourceRoot":""}